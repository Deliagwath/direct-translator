{"version":3,"sources":["Translator.js","serviceWorker.js","index.js"],"names":["Translator","props","state","input","translateTo","translated","outputBackground","copySuccess","et","\"","te","handleLanguage","bind","handleTranslate","handleVisibility","handleCopy","translate","event","this","setState","target","value","copyArea","select","document","execCommand","setTimeout","lang","ret","mapping","type","checked","onChange","ref","textarea","style","backgroundColor","onClick","queryCommandSupported","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e626ca35.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Translator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      input: \"\",\r\n      // te = Thai to English\r\n      // et = English to Thai\r\n      translateTo: \"te\",\r\n      translated: \"\",\r\n      outputBackground: \"black\",\r\n      copySuccess: \"\",\r\n      et: {\"0\":\"จ\",\"1\":\"ๅ\",\"2\":\"/\",\"3\":\"-\",\"4\":\"ภ\",\"5\":\"ถ\",\"6\":\"ุ\",\"7\":\"ึ\",\"8\":\"ค\",\"9\":\"ต\",\"-\":\"ข\",\"=\":\"ช\",\"\\\\\":\"ฃ\",\"q\":\"ๆ\",\"w\":\"ไ\",\"e\":\"ำ\",\"r\":\"พ\",\"t\":\"ะ\",\"y\":\"ั\",\"u\":\"ี\",\"i\":\"ร\",\"o\":\"น\",\"p\":\"ย\",\"[\":\"บ\",\"]\":\"ล\",\"a\":\"ฟ\",\"s\":\"ห\",\"d\":\"ก\",\"f\":\"ด\",\"g\":\"เ\",\"h\":\"้\",\"j\":\"่\",\"k\":\"า\",\"l\":\"ส\",\";\":\"ว\",\"'\":\"ง\",\"z\":\"ผ\",\"x\":\"ป\",\"c\":\"แ\",\"v\":\"อ\",\"b\":\"ิ\",\"n\":\"ื\",\"m\":\"ท\",\",\":\"ม\",\".\":\"ใ\",\"/\":\"ฝ\",\"!\":\"+\",\"@\":\"๑\",\"#\":\"๒\",\"$\":\"๓\",\"%\":\"๔\",\"^\":\"ู\",\"&\":\"฿\",\"*\":\"๕\",\"(\":\"๖\",\")\":\"๗\",\"_\":\"๘\",\"+\":\"๙\",\"|\":\"ฅ\",\"Q\":\"๐\",\"W\":\"\\\"\",\"E\":\"ฎ\",\"R\":\"ฑ\",\"T\":\"ธ\",\"Y\":\"ํ\",\"U\":\"๊\",\"I\":\"ณ\",\"O\":\"ฯ\",\"P\":\"ญ\",\"{\":\"ฐ\",\"}\":\",\",\"A\":\"ฤ\",\"S\":\"ฆ\",\"D\":\"ฏ\",\"F\":\"โ\",\"G\":\"ฌ\",\"H\":\"็\",\"J\":\"๋\",\"K\":\"ษ\",\"L\":\"ศ\",\":\":\"ซ\",\"\\\"\":\".\",\"Z\":\"(\",\"X\":\")\",\"C\":\"ฉ\",\"V\":\"ฮ\",\"B\":\"ฺ\",\"N\":\"์\",\"M\":\"?\",\"<\":\"ฒ\",\">\":\"ฬ\",\"?\":\"ฦ\"},\r\n      te: {\"ๅ\":\"1\",\"/\":\"2\",\"-\":\"3\",\"ภ\":\"4\",\"ถ\":\"5\",\"ุ\":\"6\",\"ึ\":\"7\",\"ค\":\"8\",\"ต\":\"9\",\"จ\":\"0\",\"ข\":\"-\",\"ช\":\"=\",\"ฃ\":\"\\\\\",\"ๆ\":\"q\",\"ไ\":\"w\",\"ำ\":\"e\",\"พ\":\"r\",\"ะ\":\"t\",\"ั\":\"y\",\"ี\":\"u\",\"ร\":\"i\",\"น\":\"o\",\"ย\":\"p\",\"บ\":\"[\",\"ล\":\"]\",\"ฟ\":\"a\",\"ห\":\"s\",\"ก\":\"d\",\"ด\":\"f\",\"เ\":\"g\",\"้\":\"h\",\"่\":\"j\",\"า\":\"k\",\"ส\":\"l\",\"ว\":\";\",\"ง\":\"'\",\"ผ\":\"z\",\"ป\":\"x\",\"แ\":\"c\",\"อ\":\"v\",\"ิ\":\"b\",\"ื\":\"n\",\"ท\":\"m\",\"ม\":\",\",\"ใ\":\".\",\"ฝ\":\"/\",\"+\":\"!\",\"๑\":\"@\",\"๒\":\"#\",\"๓\":\"$\",\"๔\":\"%\",\"ู\":\"^\",\"฿\":\"&\",\"๕\":\"*\",\"๖\":\"(\",\"๗\":\")\",\"๘\":\"_\",\"๙\":\"+\",\"ฅ\":\"|\",\"๐\":\"Q\",\"\\\"\":\"W\",\"ฎ\":\"E\",\"ฑ\":\"R\",\"ธ\":\"T\",\"ํ\":\"Y\",\"๊\":\"U\",\"ณ\":\"I\",\"ฯ\":\"O\",\"ญ\":\"P\",\"ฐ\":\"{\",\",\":\"}\",\"ฤ\":\"A\",\"ฆ\":\"S\",\"ฏ\":\"D\",\"โ\":\"F\",\"ฌ\":\"G\",\"็\":\"H\",\"๋\":\"J\",\"ษ\":\"K\",\"ศ\":\"L\",\"ซ\":\":\",\".\":\"\\\"\",\"(\":\"Z\",\")\":\"X\",\"ฉ\":\"C\",\"ฮ\":\"V\",\"ฺ\":\"B\",\"์\":\"N\",\"?\":\"M\",\"ฒ\":\"<\",\"ฬ\":\">\",\"ฦ\":\"?\"}\r\n    }\r\n    this.handleLanguage = this.handleLanguage.bind(this)\r\n    this.handleTranslate = this.handleTranslate.bind(this)\r\n    this.handleVisibility = this.handleVisibility.bind(this)\r\n    this.handleCopy = this.handleCopy.bind(this)\r\n\r\n    this.translate = this.translate.bind(this)\r\n  }\r\n\r\n  handleTranslate(event) {\r\n    this.setState({input: event.target.value, translated: this.translate(event.target.value, this.state.translateTo)});\r\n  }\r\n\r\n  handleLanguage(event) {\r\n    this.setState({translateTo: event.target.value, translated: this.translate(this.state.input, event.target.value)});\r\n  }\r\n\r\n  handleVisibility(event) {\r\n    this.setState({outputBackground: this.state.outputBackground === \"black\" ? \"white\" : \"black\"});\r\n  }\r\n\r\n  handleCopy(event) {\r\n    this.copyArea.select()\r\n    document.execCommand(\"copy\")\r\n    this.setState({copySuccess: \"Copied!\"})\r\n    setTimeout(function() {\r\n      this.setState({copySuccess: \"\"})\r\n    }.bind(this), 3000)\r\n  }\r\n\r\n  translate(input, lang) {\r\n    let ret = \"\";\r\n    let mapping = lang === \"te\" ? this.state.te : this.state.et;\r\n    for (let char of input) {\r\n      ret += mapping[char];\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Translator</h2>\r\n        <div>\r\n          TH-EN\r\n          <input type=\"radio\" value=\"te\" checked={this.state.translateTo === \"te\"} onChange={this.handleLanguage} />\r\n        </div>\r\n        <div>\r\n          EN-TH\r\n          <input type=\"radio\" value=\"et\" checked={this.state.translateTo === \"et\"} onChange={this.handleLanguage} />\r\n        </div>\r\n        <input value={this.state.input} onChange={this.handleTranslate} /><br/>\r\n        <input ref={(textarea) => this.copyArea = textarea} style={{backgroundColor: this.state.outputBackground}} value={this.state.translated}/>\r\n        <button onClick={this.handleVisibility}>Show</button>{document.queryCommandSupported(\"copy\") && <button onClick={this.handleCopy}>Copy</button>}\r\n        <h3>{this.state.copySuccess}</h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Translator;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Translator from './Translator';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Translator />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}